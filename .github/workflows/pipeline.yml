on: 
  push: 
    branches:
      - release
  pull_request:
    branches:
      - release

name: Build Nuget
jobs:
  build:
    name: Build    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Install dependencies
      run: dotnet restore ./src/JaVisitei.Brasil.Nuget
    - name: Build
      run: dotnet build --configuration Release --no-restore ./src/JaVisitei.Brasil.Nuget
    - name: Test
      run: dotnet test --no-restore --verbosity normal ./src/JaVisitei.Brasil.Test
      
  deploy:
    name: Deploy  
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: ${{ secrets.AWS_ARN_IAM_ROLE }}
        role-duration-seconds: 1200
        aws-region: us-east-1
  
    - name: Deploy and publish
      run: |
        export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ${{ secrets.AWS_DOMAIN }} --domain-owner ${{ secrets.AWS_OWNER }} --query authorizationToken --output text`
        dotnet nuget add source ${{ secrets.AWS_PACKAGE }} -n ${{ secrets.AWS_DOMAIN }}/${{ secrets.AWS_REPOSITORY }} -u "aws" -p "${CODEARTIFACT_AUTH_TOKEN}" --store-password-in-clear-text
        
    - name: List Package 1
      run: aws codeartifact list-packages --domain ${{ secrets.AWS_DOMAIN }} --domain-owner ${{ secrets.AWS_OWNER }} --repository ${{ secrets.AWS_REPOSITORY }}

    - name: build pack
      run: |
        dotnet pack -o .
        dotnet nuget push *.nupkg -s codeartifact
        
    - name: List Package 1
      run: aws codeartifact list-packages --domain ${{ secrets.AWS_DOMAIN }} --domain-owner ${{ secrets.AWS_OWNER }} --repository ${{ secrets.AWS_REPOSITORY }}